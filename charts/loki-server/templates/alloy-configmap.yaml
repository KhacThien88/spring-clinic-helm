apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-{{ .Values.env }}-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: alloy
    env: {{ .Values.env }}
data:
  config.alloy: |
    logging {
      level  = "info"
      format = "logfmt"
    }
    discovery.kubernetes "pods" {
      role = "pod"
      namespaces = ["petclinic-review"]
    }
    discovery.relabel "pods" {
      targets = discovery.kubernetes.pods.targets
      rule {
        source_labels = ["__meta_kubernetes_pod_name"]
        action = "replace"
        target_label = "pod"
      }
      rule {
        source_labels = ["__meta_kubernetes_pod_container_name"]
        action = "replace"
        target_label = "container"
      }
      rule {
        source_labels = ["__meta_kubernetes_namespace"]
        action = "replace"
        target_label = "namespace"
      }
      rule {
        source_labels = ["__meta_kubernetes_pod_label_app"]
        action = "replace"
        target_label = "app"
      }
      rule {
        source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
        target_label = "__path__"
        separator = "/"
        replacement = "/var/log/pods/*$1/*.log"
      }
    }
    local.file_match "pods" {
      path_targets = discovery.relabel.pods.output
    }
    loki.source.file "pods" {
      targets = local.file_match.pods.targets
      forward_to = [loki.process.process_logs.receiver]
    }
    loki.process "process_logs" {
      stage.docker {}
      forward_to = [loki.write.loki.receiver]
    }
    loki.write "loki" {
      endpoint {
        url = "http://{{ .Values.appName }}-{{ .Values.env }}-service.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port }}/loki/api/v1/push"
      }
    }